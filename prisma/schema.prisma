// schema.prisma

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
    output = "../node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
    shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Todo {
    id String @default(cuid()) @id
    title String
    description String?
    publicationDate DateTime @default(now())
    dueDate String?
    finished Boolean @default(false)
}

model Post {
    id String @default(cuid()) @id
    title String
    content String
    published Boolean @default(false)
    author User? @relation(fields: [authorId], references: [id])
    authorId String?
}
model User {
    id String @default(cuid()) @id
    name String?
    email String?
    createdAt DateTime @default(now()) @map(name: "created_at") // @map and @@map are relevant for OAuth
    updatedAt DateTime @updatedAt @map(name: "updated_at") // @map and @@map are relevant for OAuth
    posts Post[]
    @@map(name: "users") // @map and @@map are relevant for OAuth
}
